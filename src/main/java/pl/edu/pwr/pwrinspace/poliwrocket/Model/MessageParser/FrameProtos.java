// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/resources/frames.proto

package pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser;

public final class FrameProtos {
  private FrameProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LoRaFrameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LoRaFrame)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * mcb frame
     * </pre>
     *
     * <code>required uint32 obc_state = 1;</code>
     * @return Whether the obcState field is set.
     */
    boolean hasObcState();
    /**
     * <pre>
     * mcb frame
     * </pre>
     *
     * <code>required uint32 obc_state = 1;</code>
     * @return The obcState.
     */
    int getObcState();

    /**
     * <code>required uint32 uptime = 2;</code>
     * @return Whether the uptime field is set.
     */
    boolean hasUptime();
    /**
     * <code>required uint32 uptime = 2;</code>
     * @return The uptime.
     */
    int getUptime();

    /**
     * <code>required uint32 flight_time = 3;</code>
     * @return Whether the flightTime field is set.
     */
    boolean hasFlightTime();
    /**
     * <code>required uint32 flight_time = 3;</code>
     * @return The flightTime.
     */
    int getFlightTime();

    /**
     * <code>required float mcb_battery = 4;</code>
     * @return Whether the mcbBattery field is set.
     */
    boolean hasMcbBattery();
    /**
     * <code>required float mcb_battery = 4;</code>
     * @return The mcbBattery.
     */
    float getMcbBattery();

    /**
     * <code>required float gps_lat = 5;</code>
     * @return Whether the gpsLat field is set.
     */
    boolean hasGpsLat();
    /**
     * <code>required float gps_lat = 5;</code>
     * @return The gpsLat.
     */
    float getGpsLat();

    /**
     * <code>required float gps_long = 6;</code>
     * @return Whether the gpsLong field is set.
     */
    boolean hasGpsLong();
    /**
     * <code>required float gps_long = 6;</code>
     * @return The gpsLong.
     */
    float getGpsLong();

    /**
     * <code>required float gps_sat = 7;</code>
     * @return Whether the gpsSat field is set.
     */
    boolean hasGpsSat();
    /**
     * <code>required float gps_sat = 7;</code>
     * @return The gpsSat.
     */
    float getGpsSat();

    /**
     * <code>required float mcb_altitude = 8;</code>
     * @return Whether the mcbAltitude field is set.
     */
    boolean hasMcbAltitude();
    /**
     * <code>required float mcb_altitude = 8;</code>
     * @return The mcbAltitude.
     */
    float getMcbAltitude();

    /**
     * <code>required float mcb_velocity = 9;</code>
     * @return Whether the mcbVelocity field is set.
     */
    boolean hasMcbVelocity();
    /**
     * <code>required float mcb_velocity = 9;</code>
     * @return The mcbVelocity.
     */
    float getMcbVelocity();

    /**
     * <code>required int32 mcb_temperature = 10;</code>
     * @return Whether the mcbTemperature field is set.
     */
    boolean hasMcbTemperature();
    /**
     * <code>required int32 mcb_temperature = 10;</code>
     * @return The mcbTemperature.
     */
    int getMcbTemperature();

    /**
     * <code>required float euler_fi = 11;</code>
     * @return Whether the eulerFi field is set.
     */
    boolean hasEulerFi();
    /**
     * <code>required float euler_fi = 11;</code>
     * @return The eulerFi.
     */
    float getEulerFi();

    /**
     * <code>required float euler_psi = 12;</code>
     * @return Whether the eulerPsi field is set.
     */
    boolean hasEulerPsi();
    /**
     * <code>required float euler_psi = 12;</code>
     * @return The eulerPsi.
     */
    float getEulerPsi();

    /**
     * <code>required float euler_theta = 13;</code>
     * @return Whether the eulerTheta field is set.
     */
    boolean hasEulerTheta();
    /**
     * <code>required float euler_theta = 13;</code>
     * @return The eulerTheta.
     */
    float getEulerTheta();

    /**
     * <pre>
     * recovery frame
     * </pre>
     *
     * <code>required uint32 recov_pressure_1 = 14;</code>
     * @return Whether the recovPressure1 field is set.
     */
    boolean hasRecovPressure1();
    /**
     * <pre>
     * recovery frame
     * </pre>
     *
     * <code>required uint32 recov_pressure_1 = 14;</code>
     * @return The recovPressure1.
     */
    int getRecovPressure1();

    /**
     * <code>required uint32 recov_pressure_2 = 15;</code>
     * @return Whether the recovPressure2 field is set.
     */
    boolean hasRecovPressure2();
    /**
     * <code>required uint32 recov_pressure_2 = 15;</code>
     * @return The recovPressure2.
     */
    int getRecovPressure2();

    /**
     * <code>required fixed32 recov_byte_data = 16;</code>
     * @return Whether the recovByteData field is set.
     */
    boolean hasRecovByteData();
    /**
     * <code>required fixed32 recov_byte_data = 16;</code>
     * @return The recovByteData.
     */
    int getRecovByteData();

    /**
     * <pre>
     * pitot frame
     * </pre>
     *
     * <code>required float pitot_battery = 17;</code>
     * @return Whether the pitotBattery field is set.
     */
    boolean hasPitotBattery();
    /**
     * <pre>
     * pitot frame
     * </pre>
     *
     * <code>required float pitot_battery = 17;</code>
     * @return The pitotBattery.
     */
    float getPitotBattery();

    /**
     * <code>required int32 pitot_altitude = 18;</code>
     * @return Whether the pitotAltitude field is set.
     */
    boolean hasPitotAltitude();
    /**
     * <code>required int32 pitot_altitude = 18;</code>
     * @return The pitotAltitude.
     */
    int getPitotAltitude();

    /**
     * <code>required int32 pitot_velocity = 19;</code>
     * @return Whether the pitotVelocity field is set.
     */
    boolean hasPitotVelocity();
    /**
     * <code>required int32 pitot_velocity = 19;</code>
     * @return The pitotVelocity.
     */
    int getPitotVelocity();

    /**
     * <code>required int32 pitot_temperature = 20;</code>
     * @return Whether the pitotTemperature field is set.
     */
    boolean hasPitotTemperature();
    /**
     * <code>required int32 pitot_temperature = 20;</code>
     * @return The pitotTemperature.
     */
    int getPitotTemperature();

    /**
     * <pre>
     * main valve
     * </pre>
     *
     * <code>required float mval_battery = 21;</code>
     * @return Whether the mvalBattery field is set.
     */
    boolean hasMvalBattery();
    /**
     * <pre>
     * main valve
     * </pre>
     *
     * <code>required float mval_battery = 21;</code>
     * @return The mvalBattery.
     */
    float getMvalBattery();

    /**
     * <code>required fixed32 mval_byte_data = 22;</code>
     * @return Whether the mvalByteData field is set.
     */
    boolean hasMvalByteData();
    /**
     * <code>required fixed32 mval_byte_data = 22;</code>
     * @return The mvalByteData.
     */
    int getMvalByteData();

    /**
     * <pre>
     * vent valve
     * </pre>
     *
     * <code>required float vent_battery = 23;</code>
     * @return Whether the ventBattery field is set.
     */
    boolean hasVentBattery();
    /**
     * <pre>
     * vent valve
     * </pre>
     *
     * <code>required float vent_battery = 23;</code>
     * @return The ventBattery.
     */
    float getVentBattery();

    /**
     * <code>required float tank_pressure = 24;</code>
     * @return Whether the tankPressure field is set.
     */
    boolean hasTankPressure();
    /**
     * <code>required float tank_pressure = 24;</code>
     * @return The tankPressure.
     */
    float getTankPressure();

    /**
     * <code>required fixed32 vent_byte_data = 25;</code>
     * @return Whether the ventByteData field is set.
     */
    boolean hasVentByteData();
    /**
     * <code>required fixed32 vent_byte_data = 25;</code>
     * @return The ventByteData.
     */
    int getVentByteData();

    /**
     * <pre>
     * tanwa frame
     * </pre>
     *
     * <code>required float tanwa_battery = 26;</code>
     * @return Whether the tanwaBattery field is set.
     */
    boolean hasTanwaBattery();
    /**
     * <pre>
     * tanwa frame
     * </pre>
     *
     * <code>required float tanwa_battery = 26;</code>
     * @return The tanwaBattery.
     */
    float getTanwaBattery();

    /**
     * <code>required fixed32 tanwa_byte_data = 27;</code>
     * @return Whether the tanwaByteData field is set.
     */
    boolean hasTanwaByteData();
    /**
     * <code>required fixed32 tanwa_byte_data = 27;</code>
     * @return The tanwaByteData.
     */
    int getTanwaByteData();

    /**
     * <code>required uint32 tanwa_state = 28;</code>
     * @return Whether the tanwaState field is set.
     */
    boolean hasTanwaState();
    /**
     * <code>required uint32 tanwa_state = 28;</code>
     * @return The tanwaState.
     */
    int getTanwaState();

    /**
     * <code>required float rocket_weight = 29;</code>
     * @return Whether the rocketWeight field is set.
     */
    boolean hasRocketWeight();
    /**
     * <code>required float rocket_weight = 29;</code>
     * @return The rocketWeight.
     */
    float getRocketWeight();

    /**
     * <code>required float tank_weight = 30;</code>
     * @return Whether the tankWeight field is set.
     */
    boolean hasTankWeight();
    /**
     * <code>required float tank_weight = 30;</code>
     * @return The tankWeight.
     */
    float getTankWeight();

    /**
     * <code>required float temperature1 = 31;</code>
     * @return Whether the temperature1 field is set.
     */
    boolean hasTemperature1();
    /**
     * <code>required float temperature1 = 31;</code>
     * @return The temperature1.
     */
    float getTemperature1();

    /**
     * <code>required float temperature2 = 32;</code>
     * @return Whether the temperature2 field is set.
     */
    boolean hasTemperature2();
    /**
     * <code>required float temperature2 = 32;</code>
     * @return The temperature2.
     */
    float getTemperature2();

    /**
     * <code>required float pressure = 33;</code>
     * @return Whether the pressure field is set.
     */
    boolean hasPressure();
    /**
     * <code>required float pressure = 33;</code>
     * @return The pressure.
     */
    float getPressure();

    /**
     * <code>required fixed32 esp_now_byte_data = 34;</code>
     * @return Whether the espNowByteData field is set.
     */
    boolean hasEspNowByteData();
    /**
     * <code>required fixed32 esp_now_byte_data = 34;</code>
     * @return The espNowByteData.
     */
    int getEspNowByteData();

    /**
     * <code>required fixed32 errors = 35;</code>
     * @return Whether the errors field is set.
     */
    boolean hasErrors();
    /**
     * <code>required fixed32 errors = 35;</code>
     * @return The errors.
     */
    int getErrors();
  }
  /**
   * Protobuf type {@code LoRaFrame}
   */
  public static final class LoRaFrame extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:LoRaFrame)
      LoRaFrameOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LoRaFrame.newBuilder() to construct.
    private LoRaFrame(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LoRaFrame() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LoRaFrame();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.internal_static_LoRaFrame_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.internal_static_LoRaFrame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame.class, pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame.Builder.class);
    }

    private int bitField0_;
    private int bitField1_;
    public static final int OBC_STATE_FIELD_NUMBER = 1;
    private int obcState_ = 0;
    /**
     * <pre>
     * mcb frame
     * </pre>
     *
     * <code>required uint32 obc_state = 1;</code>
     * @return Whether the obcState field is set.
     */
    @java.lang.Override
    public boolean hasObcState() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * mcb frame
     * </pre>
     *
     * <code>required uint32 obc_state = 1;</code>
     * @return The obcState.
     */
    @java.lang.Override
    public int getObcState() {
      return obcState_;
    }

    public static final int UPTIME_FIELD_NUMBER = 2;
    private int uptime_ = 0;
    /**
     * <code>required uint32 uptime = 2;</code>
     * @return Whether the uptime field is set.
     */
    @java.lang.Override
    public boolean hasUptime() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required uint32 uptime = 2;</code>
     * @return The uptime.
     */
    @java.lang.Override
    public int getUptime() {
      return uptime_;
    }

    public static final int FLIGHT_TIME_FIELD_NUMBER = 3;
    private int flightTime_ = 0;
    /**
     * <code>required uint32 flight_time = 3;</code>
     * @return Whether the flightTime field is set.
     */
    @java.lang.Override
    public boolean hasFlightTime() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required uint32 flight_time = 3;</code>
     * @return The flightTime.
     */
    @java.lang.Override
    public int getFlightTime() {
      return flightTime_;
    }

    public static final int MCB_BATTERY_FIELD_NUMBER = 4;
    private float mcbBattery_ = 0F;
    /**
     * <code>required float mcb_battery = 4;</code>
     * @return Whether the mcbBattery field is set.
     */
    @java.lang.Override
    public boolean hasMcbBattery() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required float mcb_battery = 4;</code>
     * @return The mcbBattery.
     */
    @java.lang.Override
    public float getMcbBattery() {
      return mcbBattery_;
    }

    public static final int GPS_LAT_FIELD_NUMBER = 5;
    private float gpsLat_ = 0F;
    /**
     * <code>required float gps_lat = 5;</code>
     * @return Whether the gpsLat field is set.
     */
    @java.lang.Override
    public boolean hasGpsLat() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>required float gps_lat = 5;</code>
     * @return The gpsLat.
     */
    @java.lang.Override
    public float getGpsLat() {
      return gpsLat_;
    }

    public static final int GPS_LONG_FIELD_NUMBER = 6;
    private float gpsLong_ = 0F;
    /**
     * <code>required float gps_long = 6;</code>
     * @return Whether the gpsLong field is set.
     */
    @java.lang.Override
    public boolean hasGpsLong() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>required float gps_long = 6;</code>
     * @return The gpsLong.
     */
    @java.lang.Override
    public float getGpsLong() {
      return gpsLong_;
    }

    public static final int GPS_SAT_FIELD_NUMBER = 7;
    private float gpsSat_ = 0F;
    /**
     * <code>required float gps_sat = 7;</code>
     * @return Whether the gpsSat field is set.
     */
    @java.lang.Override
    public boolean hasGpsSat() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>required float gps_sat = 7;</code>
     * @return The gpsSat.
     */
    @java.lang.Override
    public float getGpsSat() {
      return gpsSat_;
    }

    public static final int MCB_ALTITUDE_FIELD_NUMBER = 8;
    private float mcbAltitude_ = 0F;
    /**
     * <code>required float mcb_altitude = 8;</code>
     * @return Whether the mcbAltitude field is set.
     */
    @java.lang.Override
    public boolean hasMcbAltitude() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>required float mcb_altitude = 8;</code>
     * @return The mcbAltitude.
     */
    @java.lang.Override
    public float getMcbAltitude() {
      return mcbAltitude_;
    }

    public static final int MCB_VELOCITY_FIELD_NUMBER = 9;
    private float mcbVelocity_ = 0F;
    /**
     * <code>required float mcb_velocity = 9;</code>
     * @return Whether the mcbVelocity field is set.
     */
    @java.lang.Override
    public boolean hasMcbVelocity() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>required float mcb_velocity = 9;</code>
     * @return The mcbVelocity.
     */
    @java.lang.Override
    public float getMcbVelocity() {
      return mcbVelocity_;
    }

    public static final int MCB_TEMPERATURE_FIELD_NUMBER = 10;
    private int mcbTemperature_ = 0;
    /**
     * <code>required int32 mcb_temperature = 10;</code>
     * @return Whether the mcbTemperature field is set.
     */
    @java.lang.Override
    public boolean hasMcbTemperature() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>required int32 mcb_temperature = 10;</code>
     * @return The mcbTemperature.
     */
    @java.lang.Override
    public int getMcbTemperature() {
      return mcbTemperature_;
    }

    public static final int EULER_FI_FIELD_NUMBER = 11;
    private float eulerFi_ = 0F;
    /**
     * <code>required float euler_fi = 11;</code>
     * @return Whether the eulerFi field is set.
     */
    @java.lang.Override
    public boolean hasEulerFi() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>required float euler_fi = 11;</code>
     * @return The eulerFi.
     */
    @java.lang.Override
    public float getEulerFi() {
      return eulerFi_;
    }

    public static final int EULER_PSI_FIELD_NUMBER = 12;
    private float eulerPsi_ = 0F;
    /**
     * <code>required float euler_psi = 12;</code>
     * @return Whether the eulerPsi field is set.
     */
    @java.lang.Override
    public boolean hasEulerPsi() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>required float euler_psi = 12;</code>
     * @return The eulerPsi.
     */
    @java.lang.Override
    public float getEulerPsi() {
      return eulerPsi_;
    }

    public static final int EULER_THETA_FIELD_NUMBER = 13;
    private float eulerTheta_ = 0F;
    /**
     * <code>required float euler_theta = 13;</code>
     * @return Whether the eulerTheta field is set.
     */
    @java.lang.Override
    public boolean hasEulerTheta() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>required float euler_theta = 13;</code>
     * @return The eulerTheta.
     */
    @java.lang.Override
    public float getEulerTheta() {
      return eulerTheta_;
    }

    public static final int RECOV_PRESSURE_1_FIELD_NUMBER = 14;
    private int recovPressure1_ = 0;
    /**
     * <pre>
     * recovery frame
     * </pre>
     *
     * <code>required uint32 recov_pressure_1 = 14;</code>
     * @return Whether the recovPressure1 field is set.
     */
    @java.lang.Override
    public boolean hasRecovPressure1() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * recovery frame
     * </pre>
     *
     * <code>required uint32 recov_pressure_1 = 14;</code>
     * @return The recovPressure1.
     */
    @java.lang.Override
    public int getRecovPressure1() {
      return recovPressure1_;
    }

    public static final int RECOV_PRESSURE_2_FIELD_NUMBER = 15;
    private int recovPressure2_ = 0;
    /**
     * <code>required uint32 recov_pressure_2 = 15;</code>
     * @return Whether the recovPressure2 field is set.
     */
    @java.lang.Override
    public boolean hasRecovPressure2() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>required uint32 recov_pressure_2 = 15;</code>
     * @return The recovPressure2.
     */
    @java.lang.Override
    public int getRecovPressure2() {
      return recovPressure2_;
    }

    public static final int RECOV_BYTE_DATA_FIELD_NUMBER = 16;
    private int recovByteData_ = 0;
    /**
     * <code>required fixed32 recov_byte_data = 16;</code>
     * @return Whether the recovByteData field is set.
     */
    @java.lang.Override
    public boolean hasRecovByteData() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>required fixed32 recov_byte_data = 16;</code>
     * @return The recovByteData.
     */
    @java.lang.Override
    public int getRecovByteData() {
      return recovByteData_;
    }

    public static final int PITOT_BATTERY_FIELD_NUMBER = 17;
    private float pitotBattery_ = 0F;
    /**
     * <pre>
     * pitot frame
     * </pre>
     *
     * <code>required float pitot_battery = 17;</code>
     * @return Whether the pitotBattery field is set.
     */
    @java.lang.Override
    public boolean hasPitotBattery() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     * pitot frame
     * </pre>
     *
     * <code>required float pitot_battery = 17;</code>
     * @return The pitotBattery.
     */
    @java.lang.Override
    public float getPitotBattery() {
      return pitotBattery_;
    }

    public static final int PITOT_ALTITUDE_FIELD_NUMBER = 18;
    private int pitotAltitude_ = 0;
    /**
     * <code>required int32 pitot_altitude = 18;</code>
     * @return Whether the pitotAltitude field is set.
     */
    @java.lang.Override
    public boolean hasPitotAltitude() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <code>required int32 pitot_altitude = 18;</code>
     * @return The pitotAltitude.
     */
    @java.lang.Override
    public int getPitotAltitude() {
      return pitotAltitude_;
    }

    public static final int PITOT_VELOCITY_FIELD_NUMBER = 19;
    private int pitotVelocity_ = 0;
    /**
     * <code>required int32 pitot_velocity = 19;</code>
     * @return Whether the pitotVelocity field is set.
     */
    @java.lang.Override
    public boolean hasPitotVelocity() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <code>required int32 pitot_velocity = 19;</code>
     * @return The pitotVelocity.
     */
    @java.lang.Override
    public int getPitotVelocity() {
      return pitotVelocity_;
    }

    public static final int PITOT_TEMPERATURE_FIELD_NUMBER = 20;
    private int pitotTemperature_ = 0;
    /**
     * <code>required int32 pitot_temperature = 20;</code>
     * @return Whether the pitotTemperature field is set.
     */
    @java.lang.Override
    public boolean hasPitotTemperature() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <code>required int32 pitot_temperature = 20;</code>
     * @return The pitotTemperature.
     */
    @java.lang.Override
    public int getPitotTemperature() {
      return pitotTemperature_;
    }

    public static final int MVAL_BATTERY_FIELD_NUMBER = 21;
    private float mvalBattery_ = 0F;
    /**
     * <pre>
     * main valve
     * </pre>
     *
     * <code>required float mval_battery = 21;</code>
     * @return Whether the mvalBattery field is set.
     */
    @java.lang.Override
    public boolean hasMvalBattery() {
      return ((bitField0_ & 0x00100000) != 0);
    }
    /**
     * <pre>
     * main valve
     * </pre>
     *
     * <code>required float mval_battery = 21;</code>
     * @return The mvalBattery.
     */
    @java.lang.Override
    public float getMvalBattery() {
      return mvalBattery_;
    }

    public static final int MVAL_BYTE_DATA_FIELD_NUMBER = 22;
    private int mvalByteData_ = 0;
    /**
     * <code>required fixed32 mval_byte_data = 22;</code>
     * @return Whether the mvalByteData field is set.
     */
    @java.lang.Override
    public boolean hasMvalByteData() {
      return ((bitField0_ & 0x00200000) != 0);
    }
    /**
     * <code>required fixed32 mval_byte_data = 22;</code>
     * @return The mvalByteData.
     */
    @java.lang.Override
    public int getMvalByteData() {
      return mvalByteData_;
    }

    public static final int VENT_BATTERY_FIELD_NUMBER = 23;
    private float ventBattery_ = 0F;
    /**
     * <pre>
     * vent valve
     * </pre>
     *
     * <code>required float vent_battery = 23;</code>
     * @return Whether the ventBattery field is set.
     */
    @java.lang.Override
    public boolean hasVentBattery() {
      return ((bitField0_ & 0x00400000) != 0);
    }
    /**
     * <pre>
     * vent valve
     * </pre>
     *
     * <code>required float vent_battery = 23;</code>
     * @return The ventBattery.
     */
    @java.lang.Override
    public float getVentBattery() {
      return ventBattery_;
    }

    public static final int TANK_PRESSURE_FIELD_NUMBER = 24;
    private float tankPressure_ = 0F;
    /**
     * <code>required float tank_pressure = 24;</code>
     * @return Whether the tankPressure field is set.
     */
    @java.lang.Override
    public boolean hasTankPressure() {
      return ((bitField0_ & 0x00800000) != 0);
    }
    /**
     * <code>required float tank_pressure = 24;</code>
     * @return The tankPressure.
     */
    @java.lang.Override
    public float getTankPressure() {
      return tankPressure_;
    }

    public static final int VENT_BYTE_DATA_FIELD_NUMBER = 25;
    private int ventByteData_ = 0;
    /**
     * <code>required fixed32 vent_byte_data = 25;</code>
     * @return Whether the ventByteData field is set.
     */
    @java.lang.Override
    public boolean hasVentByteData() {
      return ((bitField0_ & 0x01000000) != 0);
    }
    /**
     * <code>required fixed32 vent_byte_data = 25;</code>
     * @return The ventByteData.
     */
    @java.lang.Override
    public int getVentByteData() {
      return ventByteData_;
    }

    public static final int TANWA_BATTERY_FIELD_NUMBER = 26;
    private float tanwaBattery_ = 0F;
    /**
     * <pre>
     * tanwa frame
     * </pre>
     *
     * <code>required float tanwa_battery = 26;</code>
     * @return Whether the tanwaBattery field is set.
     */
    @java.lang.Override
    public boolean hasTanwaBattery() {
      return ((bitField0_ & 0x02000000) != 0);
    }
    /**
     * <pre>
     * tanwa frame
     * </pre>
     *
     * <code>required float tanwa_battery = 26;</code>
     * @return The tanwaBattery.
     */
    @java.lang.Override
    public float getTanwaBattery() {
      return tanwaBattery_;
    }

    public static final int TANWA_BYTE_DATA_FIELD_NUMBER = 27;
    private int tanwaByteData_ = 0;
    /**
     * <code>required fixed32 tanwa_byte_data = 27;</code>
     * @return Whether the tanwaByteData field is set.
     */
    @java.lang.Override
    public boolean hasTanwaByteData() {
      return ((bitField0_ & 0x04000000) != 0);
    }
    /**
     * <code>required fixed32 tanwa_byte_data = 27;</code>
     * @return The tanwaByteData.
     */
    @java.lang.Override
    public int getTanwaByteData() {
      return tanwaByteData_;
    }

    public static final int TANWA_STATE_FIELD_NUMBER = 28;
    private int tanwaState_ = 0;
    /**
     * <code>required uint32 tanwa_state = 28;</code>
     * @return Whether the tanwaState field is set.
     */
    @java.lang.Override
    public boolean hasTanwaState() {
      return ((bitField0_ & 0x08000000) != 0);
    }
    /**
     * <code>required uint32 tanwa_state = 28;</code>
     * @return The tanwaState.
     */
    @java.lang.Override
    public int getTanwaState() {
      return tanwaState_;
    }

    public static final int ROCKET_WEIGHT_FIELD_NUMBER = 29;
    private float rocketWeight_ = 0F;
    /**
     * <code>required float rocket_weight = 29;</code>
     * @return Whether the rocketWeight field is set.
     */
    @java.lang.Override
    public boolean hasRocketWeight() {
      return ((bitField0_ & 0x10000000) != 0);
    }
    /**
     * <code>required float rocket_weight = 29;</code>
     * @return The rocketWeight.
     */
    @java.lang.Override
    public float getRocketWeight() {
      return rocketWeight_;
    }

    public static final int TANK_WEIGHT_FIELD_NUMBER = 30;
    private float tankWeight_ = 0F;
    /**
     * <code>required float tank_weight = 30;</code>
     * @return Whether the tankWeight field is set.
     */
    @java.lang.Override
    public boolean hasTankWeight() {
      return ((bitField0_ & 0x20000000) != 0);
    }
    /**
     * <code>required float tank_weight = 30;</code>
     * @return The tankWeight.
     */
    @java.lang.Override
    public float getTankWeight() {
      return tankWeight_;
    }

    public static final int TEMPERATURE1_FIELD_NUMBER = 31;
    private float temperature1_ = 0F;
    /**
     * <code>required float temperature1 = 31;</code>
     * @return Whether the temperature1 field is set.
     */
    @java.lang.Override
    public boolean hasTemperature1() {
      return ((bitField0_ & 0x40000000) != 0);
    }
    /**
     * <code>required float temperature1 = 31;</code>
     * @return The temperature1.
     */
    @java.lang.Override
    public float getTemperature1() {
      return temperature1_;
    }

    public static final int TEMPERATURE2_FIELD_NUMBER = 32;
    private float temperature2_ = 0F;
    /**
     * <code>required float temperature2 = 32;</code>
     * @return Whether the temperature2 field is set.
     */
    @java.lang.Override
    public boolean hasTemperature2() {
      return ((bitField0_ & 0x80000000) != 0);
    }
    /**
     * <code>required float temperature2 = 32;</code>
     * @return The temperature2.
     */
    @java.lang.Override
    public float getTemperature2() {
      return temperature2_;
    }

    public static final int PRESSURE_FIELD_NUMBER = 33;
    private float pressure_ = 0F;
    /**
     * <code>required float pressure = 33;</code>
     * @return Whether the pressure field is set.
     */
    @java.lang.Override
    public boolean hasPressure() {
      return ((bitField1_ & 0x00000001) != 0);
    }
    /**
     * <code>required float pressure = 33;</code>
     * @return The pressure.
     */
    @java.lang.Override
    public float getPressure() {
      return pressure_;
    }

    public static final int ESP_NOW_BYTE_DATA_FIELD_NUMBER = 34;
    private int espNowByteData_ = 0;
    /**
     * <code>required fixed32 esp_now_byte_data = 34;</code>
     * @return Whether the espNowByteData field is set.
     */
    @java.lang.Override
    public boolean hasEspNowByteData() {
      return ((bitField1_ & 0x00000002) != 0);
    }
    /**
     * <code>required fixed32 esp_now_byte_data = 34;</code>
     * @return The espNowByteData.
     */
    @java.lang.Override
    public int getEspNowByteData() {
      return espNowByteData_;
    }

    public static final int ERRORS_FIELD_NUMBER = 35;
    private int errors_ = 0;
    /**
     * <code>required fixed32 errors = 35;</code>
     * @return Whether the errors field is set.
     */
    @java.lang.Override
    public boolean hasErrors() {
      return ((bitField1_ & 0x00000004) != 0);
    }
    /**
     * <code>required fixed32 errors = 35;</code>
     * @return The errors.
     */
    @java.lang.Override
    public int getErrors() {
      return errors_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasObcState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUptime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFlightTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMcbBattery()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGpsLat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGpsLong()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGpsSat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMcbAltitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMcbVelocity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMcbTemperature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEulerFi()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEulerPsi()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEulerTheta()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRecovPressure1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRecovPressure2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRecovByteData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPitotBattery()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPitotAltitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPitotVelocity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPitotTemperature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMvalBattery()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMvalByteData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVentBattery()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTankPressure()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVentByteData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTanwaBattery()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTanwaByteData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTanwaState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRocketWeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTankWeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTemperature1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTemperature2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPressure()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEspNowByteData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasErrors()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, obcState_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, uptime_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, flightTime_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(4, mcbBattery_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeFloat(5, gpsLat_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFloat(6, gpsLong_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeFloat(7, gpsSat_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeFloat(8, mcbAltitude_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeFloat(9, mcbVelocity_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeInt32(10, mcbTemperature_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeFloat(11, eulerFi_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeFloat(12, eulerPsi_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeFloat(13, eulerTheta_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeUInt32(14, recovPressure1_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeUInt32(15, recovPressure2_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeFixed32(16, recovByteData_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeFloat(17, pitotBattery_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        output.writeInt32(18, pitotAltitude_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        output.writeInt32(19, pitotVelocity_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        output.writeInt32(20, pitotTemperature_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        output.writeFloat(21, mvalBattery_);
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        output.writeFixed32(22, mvalByteData_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        output.writeFloat(23, ventBattery_);
      }
      if (((bitField0_ & 0x00800000) != 0)) {
        output.writeFloat(24, tankPressure_);
      }
      if (((bitField0_ & 0x01000000) != 0)) {
        output.writeFixed32(25, ventByteData_);
      }
      if (((bitField0_ & 0x02000000) != 0)) {
        output.writeFloat(26, tanwaBattery_);
      }
      if (((bitField0_ & 0x04000000) != 0)) {
        output.writeFixed32(27, tanwaByteData_);
      }
      if (((bitField0_ & 0x08000000) != 0)) {
        output.writeUInt32(28, tanwaState_);
      }
      if (((bitField0_ & 0x10000000) != 0)) {
        output.writeFloat(29, rocketWeight_);
      }
      if (((bitField0_ & 0x20000000) != 0)) {
        output.writeFloat(30, tankWeight_);
      }
      if (((bitField0_ & 0x40000000) != 0)) {
        output.writeFloat(31, temperature1_);
      }
      if (((bitField0_ & 0x80000000) != 0)) {
        output.writeFloat(32, temperature2_);
      }
      if (((bitField1_ & 0x00000001) != 0)) {
        output.writeFloat(33, pressure_);
      }
      if (((bitField1_ & 0x00000002) != 0)) {
        output.writeFixed32(34, espNowByteData_);
      }
      if (((bitField1_ & 0x00000004) != 0)) {
        output.writeFixed32(35, errors_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, obcState_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, uptime_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, flightTime_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, mcbBattery_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, gpsLat_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, gpsLong_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, gpsSat_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, mcbAltitude_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, mcbVelocity_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, mcbTemperature_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, eulerFi_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, eulerPsi_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, eulerTheta_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, recovPressure1_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, recovPressure2_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(16, recovByteData_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, pitotBattery_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, pitotAltitude_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, pitotVelocity_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, pitotTemperature_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(21, mvalBattery_);
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(22, mvalByteData_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(23, ventBattery_);
      }
      if (((bitField0_ & 0x00800000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(24, tankPressure_);
      }
      if (((bitField0_ & 0x01000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(25, ventByteData_);
      }
      if (((bitField0_ & 0x02000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(26, tanwaBattery_);
      }
      if (((bitField0_ & 0x04000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(27, tanwaByteData_);
      }
      if (((bitField0_ & 0x08000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, tanwaState_);
      }
      if (((bitField0_ & 0x10000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(29, rocketWeight_);
      }
      if (((bitField0_ & 0x20000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(30, tankWeight_);
      }
      if (((bitField0_ & 0x40000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(31, temperature1_);
      }
      if (((bitField0_ & 0x80000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(32, temperature2_);
      }
      if (((bitField1_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(33, pressure_);
      }
      if (((bitField1_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(34, espNowByteData_);
      }
      if (((bitField1_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(35, errors_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame)) {
        return super.equals(obj);
      }
      pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame other = (pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame) obj;

      if (hasObcState() != other.hasObcState()) return false;
      if (hasObcState()) {
        if (getObcState()
            != other.getObcState()) return false;
      }
      if (hasUptime() != other.hasUptime()) return false;
      if (hasUptime()) {
        if (getUptime()
            != other.getUptime()) return false;
      }
      if (hasFlightTime() != other.hasFlightTime()) return false;
      if (hasFlightTime()) {
        if (getFlightTime()
            != other.getFlightTime()) return false;
      }
      if (hasMcbBattery() != other.hasMcbBattery()) return false;
      if (hasMcbBattery()) {
        if (java.lang.Float.floatToIntBits(getMcbBattery())
            != java.lang.Float.floatToIntBits(
                other.getMcbBattery())) return false;
      }
      if (hasGpsLat() != other.hasGpsLat()) return false;
      if (hasGpsLat()) {
        if (java.lang.Float.floatToIntBits(getGpsLat())
            != java.lang.Float.floatToIntBits(
                other.getGpsLat())) return false;
      }
      if (hasGpsLong() != other.hasGpsLong()) return false;
      if (hasGpsLong()) {
        if (java.lang.Float.floatToIntBits(getGpsLong())
            != java.lang.Float.floatToIntBits(
                other.getGpsLong())) return false;
      }
      if (hasGpsSat() != other.hasGpsSat()) return false;
      if (hasGpsSat()) {
        if (java.lang.Float.floatToIntBits(getGpsSat())
            != java.lang.Float.floatToIntBits(
                other.getGpsSat())) return false;
      }
      if (hasMcbAltitude() != other.hasMcbAltitude()) return false;
      if (hasMcbAltitude()) {
        if (java.lang.Float.floatToIntBits(getMcbAltitude())
            != java.lang.Float.floatToIntBits(
                other.getMcbAltitude())) return false;
      }
      if (hasMcbVelocity() != other.hasMcbVelocity()) return false;
      if (hasMcbVelocity()) {
        if (java.lang.Float.floatToIntBits(getMcbVelocity())
            != java.lang.Float.floatToIntBits(
                other.getMcbVelocity())) return false;
      }
      if (hasMcbTemperature() != other.hasMcbTemperature()) return false;
      if (hasMcbTemperature()) {
        if (getMcbTemperature()
            != other.getMcbTemperature()) return false;
      }
      if (hasEulerFi() != other.hasEulerFi()) return false;
      if (hasEulerFi()) {
        if (java.lang.Float.floatToIntBits(getEulerFi())
            != java.lang.Float.floatToIntBits(
                other.getEulerFi())) return false;
      }
      if (hasEulerPsi() != other.hasEulerPsi()) return false;
      if (hasEulerPsi()) {
        if (java.lang.Float.floatToIntBits(getEulerPsi())
            != java.lang.Float.floatToIntBits(
                other.getEulerPsi())) return false;
      }
      if (hasEulerTheta() != other.hasEulerTheta()) return false;
      if (hasEulerTheta()) {
        if (java.lang.Float.floatToIntBits(getEulerTheta())
            != java.lang.Float.floatToIntBits(
                other.getEulerTheta())) return false;
      }
      if (hasRecovPressure1() != other.hasRecovPressure1()) return false;
      if (hasRecovPressure1()) {
        if (getRecovPressure1()
            != other.getRecovPressure1()) return false;
      }
      if (hasRecovPressure2() != other.hasRecovPressure2()) return false;
      if (hasRecovPressure2()) {
        if (getRecovPressure2()
            != other.getRecovPressure2()) return false;
      }
      if (hasRecovByteData() != other.hasRecovByteData()) return false;
      if (hasRecovByteData()) {
        if (getRecovByteData()
            != other.getRecovByteData()) return false;
      }
      if (hasPitotBattery() != other.hasPitotBattery()) return false;
      if (hasPitotBattery()) {
        if (java.lang.Float.floatToIntBits(getPitotBattery())
            != java.lang.Float.floatToIntBits(
                other.getPitotBattery())) return false;
      }
      if (hasPitotAltitude() != other.hasPitotAltitude()) return false;
      if (hasPitotAltitude()) {
        if (getPitotAltitude()
            != other.getPitotAltitude()) return false;
      }
      if (hasPitotVelocity() != other.hasPitotVelocity()) return false;
      if (hasPitotVelocity()) {
        if (getPitotVelocity()
            != other.getPitotVelocity()) return false;
      }
      if (hasPitotTemperature() != other.hasPitotTemperature()) return false;
      if (hasPitotTemperature()) {
        if (getPitotTemperature()
            != other.getPitotTemperature()) return false;
      }
      if (hasMvalBattery() != other.hasMvalBattery()) return false;
      if (hasMvalBattery()) {
        if (java.lang.Float.floatToIntBits(getMvalBattery())
            != java.lang.Float.floatToIntBits(
                other.getMvalBattery())) return false;
      }
      if (hasMvalByteData() != other.hasMvalByteData()) return false;
      if (hasMvalByteData()) {
        if (getMvalByteData()
            != other.getMvalByteData()) return false;
      }
      if (hasVentBattery() != other.hasVentBattery()) return false;
      if (hasVentBattery()) {
        if (java.lang.Float.floatToIntBits(getVentBattery())
            != java.lang.Float.floatToIntBits(
                other.getVentBattery())) return false;
      }
      if (hasTankPressure() != other.hasTankPressure()) return false;
      if (hasTankPressure()) {
        if (java.lang.Float.floatToIntBits(getTankPressure())
            != java.lang.Float.floatToIntBits(
                other.getTankPressure())) return false;
      }
      if (hasVentByteData() != other.hasVentByteData()) return false;
      if (hasVentByteData()) {
        if (getVentByteData()
            != other.getVentByteData()) return false;
      }
      if (hasTanwaBattery() != other.hasTanwaBattery()) return false;
      if (hasTanwaBattery()) {
        if (java.lang.Float.floatToIntBits(getTanwaBattery())
            != java.lang.Float.floatToIntBits(
                other.getTanwaBattery())) return false;
      }
      if (hasTanwaByteData() != other.hasTanwaByteData()) return false;
      if (hasTanwaByteData()) {
        if (getTanwaByteData()
            != other.getTanwaByteData()) return false;
      }
      if (hasTanwaState() != other.hasTanwaState()) return false;
      if (hasTanwaState()) {
        if (getTanwaState()
            != other.getTanwaState()) return false;
      }
      if (hasRocketWeight() != other.hasRocketWeight()) return false;
      if (hasRocketWeight()) {
        if (java.lang.Float.floatToIntBits(getRocketWeight())
            != java.lang.Float.floatToIntBits(
                other.getRocketWeight())) return false;
      }
      if (hasTankWeight() != other.hasTankWeight()) return false;
      if (hasTankWeight()) {
        if (java.lang.Float.floatToIntBits(getTankWeight())
            != java.lang.Float.floatToIntBits(
                other.getTankWeight())) return false;
      }
      if (hasTemperature1() != other.hasTemperature1()) return false;
      if (hasTemperature1()) {
        if (java.lang.Float.floatToIntBits(getTemperature1())
            != java.lang.Float.floatToIntBits(
                other.getTemperature1())) return false;
      }
      if (hasTemperature2() != other.hasTemperature2()) return false;
      if (hasTemperature2()) {
        if (java.lang.Float.floatToIntBits(getTemperature2())
            != java.lang.Float.floatToIntBits(
                other.getTemperature2())) return false;
      }
      if (hasPressure() != other.hasPressure()) return false;
      if (hasPressure()) {
        if (java.lang.Float.floatToIntBits(getPressure())
            != java.lang.Float.floatToIntBits(
                other.getPressure())) return false;
      }
      if (hasEspNowByteData() != other.hasEspNowByteData()) return false;
      if (hasEspNowByteData()) {
        if (getEspNowByteData()
            != other.getEspNowByteData()) return false;
      }
      if (hasErrors() != other.hasErrors()) return false;
      if (hasErrors()) {
        if (getErrors()
            != other.getErrors()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasObcState()) {
        hash = (37 * hash) + OBC_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getObcState();
      }
      if (hasUptime()) {
        hash = (37 * hash) + UPTIME_FIELD_NUMBER;
        hash = (53 * hash) + getUptime();
      }
      if (hasFlightTime()) {
        hash = (37 * hash) + FLIGHT_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getFlightTime();
      }
      if (hasMcbBattery()) {
        hash = (37 * hash) + MCB_BATTERY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMcbBattery());
      }
      if (hasGpsLat()) {
        hash = (37 * hash) + GPS_LAT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getGpsLat());
      }
      if (hasGpsLong()) {
        hash = (37 * hash) + GPS_LONG_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getGpsLong());
      }
      if (hasGpsSat()) {
        hash = (37 * hash) + GPS_SAT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getGpsSat());
      }
      if (hasMcbAltitude()) {
        hash = (37 * hash) + MCB_ALTITUDE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMcbAltitude());
      }
      if (hasMcbVelocity()) {
        hash = (37 * hash) + MCB_VELOCITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMcbVelocity());
      }
      if (hasMcbTemperature()) {
        hash = (37 * hash) + MCB_TEMPERATURE_FIELD_NUMBER;
        hash = (53 * hash) + getMcbTemperature();
      }
      if (hasEulerFi()) {
        hash = (37 * hash) + EULER_FI_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getEulerFi());
      }
      if (hasEulerPsi()) {
        hash = (37 * hash) + EULER_PSI_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getEulerPsi());
      }
      if (hasEulerTheta()) {
        hash = (37 * hash) + EULER_THETA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getEulerTheta());
      }
      if (hasRecovPressure1()) {
        hash = (37 * hash) + RECOV_PRESSURE_1_FIELD_NUMBER;
        hash = (53 * hash) + getRecovPressure1();
      }
      if (hasRecovPressure2()) {
        hash = (37 * hash) + RECOV_PRESSURE_2_FIELD_NUMBER;
        hash = (53 * hash) + getRecovPressure2();
      }
      if (hasRecovByteData()) {
        hash = (37 * hash) + RECOV_BYTE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getRecovByteData();
      }
      if (hasPitotBattery()) {
        hash = (37 * hash) + PITOT_BATTERY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getPitotBattery());
      }
      if (hasPitotAltitude()) {
        hash = (37 * hash) + PITOT_ALTITUDE_FIELD_NUMBER;
        hash = (53 * hash) + getPitotAltitude();
      }
      if (hasPitotVelocity()) {
        hash = (37 * hash) + PITOT_VELOCITY_FIELD_NUMBER;
        hash = (53 * hash) + getPitotVelocity();
      }
      if (hasPitotTemperature()) {
        hash = (37 * hash) + PITOT_TEMPERATURE_FIELD_NUMBER;
        hash = (53 * hash) + getPitotTemperature();
      }
      if (hasMvalBattery()) {
        hash = (37 * hash) + MVAL_BATTERY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMvalBattery());
      }
      if (hasMvalByteData()) {
        hash = (37 * hash) + MVAL_BYTE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getMvalByteData();
      }
      if (hasVentBattery()) {
        hash = (37 * hash) + VENT_BATTERY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getVentBattery());
      }
      if (hasTankPressure()) {
        hash = (37 * hash) + TANK_PRESSURE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTankPressure());
      }
      if (hasVentByteData()) {
        hash = (37 * hash) + VENT_BYTE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getVentByteData();
      }
      if (hasTanwaBattery()) {
        hash = (37 * hash) + TANWA_BATTERY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTanwaBattery());
      }
      if (hasTanwaByteData()) {
        hash = (37 * hash) + TANWA_BYTE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getTanwaByteData();
      }
      if (hasTanwaState()) {
        hash = (37 * hash) + TANWA_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getTanwaState();
      }
      if (hasRocketWeight()) {
        hash = (37 * hash) + ROCKET_WEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRocketWeight());
      }
      if (hasTankWeight()) {
        hash = (37 * hash) + TANK_WEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTankWeight());
      }
      if (hasTemperature1()) {
        hash = (37 * hash) + TEMPERATURE1_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTemperature1());
      }
      if (hasTemperature2()) {
        hash = (37 * hash) + TEMPERATURE2_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTemperature2());
      }
      if (hasPressure()) {
        hash = (37 * hash) + PRESSURE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getPressure());
      }
      if (hasEspNowByteData()) {
        hash = (37 * hash) + ESP_NOW_BYTE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getEspNowByteData();
      }
      if (hasErrors()) {
        hash = (37 * hash) + ERRORS_FIELD_NUMBER;
        hash = (53 * hash) + getErrors();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LoRaFrame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LoRaFrame)
        pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.internal_static_LoRaFrame_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.internal_static_LoRaFrame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame.class, pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame.Builder.class);
      }

      // Construct using pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        bitField1_ = 0;
        obcState_ = 0;
        uptime_ = 0;
        flightTime_ = 0;
        mcbBattery_ = 0F;
        gpsLat_ = 0F;
        gpsLong_ = 0F;
        gpsSat_ = 0F;
        mcbAltitude_ = 0F;
        mcbVelocity_ = 0F;
        mcbTemperature_ = 0;
        eulerFi_ = 0F;
        eulerPsi_ = 0F;
        eulerTheta_ = 0F;
        recovPressure1_ = 0;
        recovPressure2_ = 0;
        recovByteData_ = 0;
        pitotBattery_ = 0F;
        pitotAltitude_ = 0;
        pitotVelocity_ = 0;
        pitotTemperature_ = 0;
        mvalBattery_ = 0F;
        mvalByteData_ = 0;
        ventBattery_ = 0F;
        tankPressure_ = 0F;
        ventByteData_ = 0;
        tanwaBattery_ = 0F;
        tanwaByteData_ = 0;
        tanwaState_ = 0;
        rocketWeight_ = 0F;
        tankWeight_ = 0F;
        temperature1_ = 0F;
        temperature2_ = 0F;
        pressure_ = 0F;
        espNowByteData_ = 0;
        errors_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.internal_static_LoRaFrame_descriptor;
      }

      @java.lang.Override
      public pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame getDefaultInstanceForType() {
        return pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame.getDefaultInstance();
      }

      @java.lang.Override
      public pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame build() {
        pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame buildPartial() {
        pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame result = new pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        if (bitField1_ != 0) { buildPartial1(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.obcState_ = obcState_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.uptime_ = uptime_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.flightTime_ = flightTime_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.mcbBattery_ = mcbBattery_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.gpsLat_ = gpsLat_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.gpsLong_ = gpsLong_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.gpsSat_ = gpsSat_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.mcbAltitude_ = mcbAltitude_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.mcbVelocity_ = mcbVelocity_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.mcbTemperature_ = mcbTemperature_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.eulerFi_ = eulerFi_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.eulerPsi_ = eulerPsi_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.eulerTheta_ = eulerTheta_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.recovPressure1_ = recovPressure1_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.recovPressure2_ = recovPressure2_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.recovByteData_ = recovByteData_;
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.pitotBattery_ = pitotBattery_;
          to_bitField0_ |= 0x00010000;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.pitotAltitude_ = pitotAltitude_;
          to_bitField0_ |= 0x00020000;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.pitotVelocity_ = pitotVelocity_;
          to_bitField0_ |= 0x00040000;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.pitotTemperature_ = pitotTemperature_;
          to_bitField0_ |= 0x00080000;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.mvalBattery_ = mvalBattery_;
          to_bitField0_ |= 0x00100000;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.mvalByteData_ = mvalByteData_;
          to_bitField0_ |= 0x00200000;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.ventBattery_ = ventBattery_;
          to_bitField0_ |= 0x00400000;
        }
        if (((from_bitField0_ & 0x00800000) != 0)) {
          result.tankPressure_ = tankPressure_;
          to_bitField0_ |= 0x00800000;
        }
        if (((from_bitField0_ & 0x01000000) != 0)) {
          result.ventByteData_ = ventByteData_;
          to_bitField0_ |= 0x01000000;
        }
        if (((from_bitField0_ & 0x02000000) != 0)) {
          result.tanwaBattery_ = tanwaBattery_;
          to_bitField0_ |= 0x02000000;
        }
        if (((from_bitField0_ & 0x04000000) != 0)) {
          result.tanwaByteData_ = tanwaByteData_;
          to_bitField0_ |= 0x04000000;
        }
        if (((from_bitField0_ & 0x08000000) != 0)) {
          result.tanwaState_ = tanwaState_;
          to_bitField0_ |= 0x08000000;
        }
        if (((from_bitField0_ & 0x10000000) != 0)) {
          result.rocketWeight_ = rocketWeight_;
          to_bitField0_ |= 0x10000000;
        }
        if (((from_bitField0_ & 0x20000000) != 0)) {
          result.tankWeight_ = tankWeight_;
          to_bitField0_ |= 0x20000000;
        }
        if (((from_bitField0_ & 0x40000000) != 0)) {
          result.temperature1_ = temperature1_;
          to_bitField0_ |= 0x40000000;
        }
        if (((from_bitField0_ & 0x80000000) != 0)) {
          result.temperature2_ = temperature2_;
          to_bitField0_ |= 0x80000000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartial1(pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame result) {
        int from_bitField1_ = bitField1_;
        int to_bitField1_ = 0;
        if (((from_bitField1_ & 0x00000001) != 0)) {
          result.pressure_ = pressure_;
          to_bitField1_ |= 0x00000001;
        }
        if (((from_bitField1_ & 0x00000002) != 0)) {
          result.espNowByteData_ = espNowByteData_;
          to_bitField1_ |= 0x00000002;
        }
        if (((from_bitField1_ & 0x00000004) != 0)) {
          result.errors_ = errors_;
          to_bitField1_ |= 0x00000004;
        }
        result.bitField1_ |= to_bitField1_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame) {
          return mergeFrom((pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame other) {
        if (other == pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame.getDefaultInstance()) return this;
        if (other.hasObcState()) {
          setObcState(other.getObcState());
        }
        if (other.hasUptime()) {
          setUptime(other.getUptime());
        }
        if (other.hasFlightTime()) {
          setFlightTime(other.getFlightTime());
        }
        if (other.hasMcbBattery()) {
          setMcbBattery(other.getMcbBattery());
        }
        if (other.hasGpsLat()) {
          setGpsLat(other.getGpsLat());
        }
        if (other.hasGpsLong()) {
          setGpsLong(other.getGpsLong());
        }
        if (other.hasGpsSat()) {
          setGpsSat(other.getGpsSat());
        }
        if (other.hasMcbAltitude()) {
          setMcbAltitude(other.getMcbAltitude());
        }
        if (other.hasMcbVelocity()) {
          setMcbVelocity(other.getMcbVelocity());
        }
        if (other.hasMcbTemperature()) {
          setMcbTemperature(other.getMcbTemperature());
        }
        if (other.hasEulerFi()) {
          setEulerFi(other.getEulerFi());
        }
        if (other.hasEulerPsi()) {
          setEulerPsi(other.getEulerPsi());
        }
        if (other.hasEulerTheta()) {
          setEulerTheta(other.getEulerTheta());
        }
        if (other.hasRecovPressure1()) {
          setRecovPressure1(other.getRecovPressure1());
        }
        if (other.hasRecovPressure2()) {
          setRecovPressure2(other.getRecovPressure2());
        }
        if (other.hasRecovByteData()) {
          setRecovByteData(other.getRecovByteData());
        }
        if (other.hasPitotBattery()) {
          setPitotBattery(other.getPitotBattery());
        }
        if (other.hasPitotAltitude()) {
          setPitotAltitude(other.getPitotAltitude());
        }
        if (other.hasPitotVelocity()) {
          setPitotVelocity(other.getPitotVelocity());
        }
        if (other.hasPitotTemperature()) {
          setPitotTemperature(other.getPitotTemperature());
        }
        if (other.hasMvalBattery()) {
          setMvalBattery(other.getMvalBattery());
        }
        if (other.hasMvalByteData()) {
          setMvalByteData(other.getMvalByteData());
        }
        if (other.hasVentBattery()) {
          setVentBattery(other.getVentBattery());
        }
        if (other.hasTankPressure()) {
          setTankPressure(other.getTankPressure());
        }
        if (other.hasVentByteData()) {
          setVentByteData(other.getVentByteData());
        }
        if (other.hasTanwaBattery()) {
          setTanwaBattery(other.getTanwaBattery());
        }
        if (other.hasTanwaByteData()) {
          setTanwaByteData(other.getTanwaByteData());
        }
        if (other.hasTanwaState()) {
          setTanwaState(other.getTanwaState());
        }
        if (other.hasRocketWeight()) {
          setRocketWeight(other.getRocketWeight());
        }
        if (other.hasTankWeight()) {
          setTankWeight(other.getTankWeight());
        }
        if (other.hasTemperature1()) {
          setTemperature1(other.getTemperature1());
        }
        if (other.hasTemperature2()) {
          setTemperature2(other.getTemperature2());
        }
        if (other.hasPressure()) {
          setPressure(other.getPressure());
        }
        if (other.hasEspNowByteData()) {
          setEspNowByteData(other.getEspNowByteData());
        }
        if (other.hasErrors()) {
          setErrors(other.getErrors());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasObcState()) {
          return false;
        }
        if (!hasUptime()) {
          return false;
        }
        if (!hasFlightTime()) {
          return false;
        }
        if (!hasMcbBattery()) {
          return false;
        }
        if (!hasGpsLat()) {
          return false;
        }
        if (!hasGpsLong()) {
          return false;
        }
        if (!hasGpsSat()) {
          return false;
        }
        if (!hasMcbAltitude()) {
          return false;
        }
        if (!hasMcbVelocity()) {
          return false;
        }
        if (!hasMcbTemperature()) {
          return false;
        }
        if (!hasEulerFi()) {
          return false;
        }
        if (!hasEulerPsi()) {
          return false;
        }
        if (!hasEulerTheta()) {
          return false;
        }
        if (!hasRecovPressure1()) {
          return false;
        }
        if (!hasRecovPressure2()) {
          return false;
        }
        if (!hasRecovByteData()) {
          return false;
        }
        if (!hasPitotBattery()) {
          return false;
        }
        if (!hasPitotAltitude()) {
          return false;
        }
        if (!hasPitotVelocity()) {
          return false;
        }
        if (!hasPitotTemperature()) {
          return false;
        }
        if (!hasMvalBattery()) {
          return false;
        }
        if (!hasMvalByteData()) {
          return false;
        }
        if (!hasVentBattery()) {
          return false;
        }
        if (!hasTankPressure()) {
          return false;
        }
        if (!hasVentByteData()) {
          return false;
        }
        if (!hasTanwaBattery()) {
          return false;
        }
        if (!hasTanwaByteData()) {
          return false;
        }
        if (!hasTanwaState()) {
          return false;
        }
        if (!hasRocketWeight()) {
          return false;
        }
        if (!hasTankWeight()) {
          return false;
        }
        if (!hasTemperature1()) {
          return false;
        }
        if (!hasTemperature2()) {
          return false;
        }
        if (!hasPressure()) {
          return false;
        }
        if (!hasEspNowByteData()) {
          return false;
        }
        if (!hasErrors()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                obcState_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                uptime_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                flightTime_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 37: {
                mcbBattery_ = input.readFloat();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
              case 45: {
                gpsLat_ = input.readFloat();
                bitField0_ |= 0x00000010;
                break;
              } // case 45
              case 53: {
                gpsLong_ = input.readFloat();
                bitField0_ |= 0x00000020;
                break;
              } // case 53
              case 61: {
                gpsSat_ = input.readFloat();
                bitField0_ |= 0x00000040;
                break;
              } // case 61
              case 69: {
                mcbAltitude_ = input.readFloat();
                bitField0_ |= 0x00000080;
                break;
              } // case 69
              case 77: {
                mcbVelocity_ = input.readFloat();
                bitField0_ |= 0x00000100;
                break;
              } // case 77
              case 80: {
                mcbTemperature_ = input.readInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 93: {
                eulerFi_ = input.readFloat();
                bitField0_ |= 0x00000400;
                break;
              } // case 93
              case 101: {
                eulerPsi_ = input.readFloat();
                bitField0_ |= 0x00000800;
                break;
              } // case 101
              case 109: {
                eulerTheta_ = input.readFloat();
                bitField0_ |= 0x00001000;
                break;
              } // case 109
              case 112: {
                recovPressure1_ = input.readUInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 120: {
                recovPressure2_ = input.readUInt32();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 133: {
                recovByteData_ = input.readFixed32();
                bitField0_ |= 0x00008000;
                break;
              } // case 133
              case 141: {
                pitotBattery_ = input.readFloat();
                bitField0_ |= 0x00010000;
                break;
              } // case 141
              case 144: {
                pitotAltitude_ = input.readInt32();
                bitField0_ |= 0x00020000;
                break;
              } // case 144
              case 152: {
                pitotVelocity_ = input.readInt32();
                bitField0_ |= 0x00040000;
                break;
              } // case 152
              case 160: {
                pitotTemperature_ = input.readInt32();
                bitField0_ |= 0x00080000;
                break;
              } // case 160
              case 173: {
                mvalBattery_ = input.readFloat();
                bitField0_ |= 0x00100000;
                break;
              } // case 173
              case 181: {
                mvalByteData_ = input.readFixed32();
                bitField0_ |= 0x00200000;
                break;
              } // case 181
              case 189: {
                ventBattery_ = input.readFloat();
                bitField0_ |= 0x00400000;
                break;
              } // case 189
              case 197: {
                tankPressure_ = input.readFloat();
                bitField0_ |= 0x00800000;
                break;
              } // case 197
              case 205: {
                ventByteData_ = input.readFixed32();
                bitField0_ |= 0x01000000;
                break;
              } // case 205
              case 213: {
                tanwaBattery_ = input.readFloat();
                bitField0_ |= 0x02000000;
                break;
              } // case 213
              case 221: {
                tanwaByteData_ = input.readFixed32();
                bitField0_ |= 0x04000000;
                break;
              } // case 221
              case 224: {
                tanwaState_ = input.readUInt32();
                bitField0_ |= 0x08000000;
                break;
              } // case 224
              case 237: {
                rocketWeight_ = input.readFloat();
                bitField0_ |= 0x10000000;
                break;
              } // case 237
              case 245: {
                tankWeight_ = input.readFloat();
                bitField0_ |= 0x20000000;
                break;
              } // case 245
              case 253: {
                temperature1_ = input.readFloat();
                bitField0_ |= 0x40000000;
                break;
              } // case 253
              case 261: {
                temperature2_ = input.readFloat();
                bitField0_ |= 0x80000000;
                break;
              } // case 261
              case 269: {
                pressure_ = input.readFloat();
                bitField1_ |= 0x00000001;
                break;
              } // case 269
              case 277: {
                espNowByteData_ = input.readFixed32();
                bitField1_ |= 0x00000002;
                break;
              } // case 277
              case 285: {
                errors_ = input.readFixed32();
                bitField1_ |= 0x00000004;
                break;
              } // case 285
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private int obcState_ ;
      /**
       * <pre>
       * mcb frame
       * </pre>
       *
       * <code>required uint32 obc_state = 1;</code>
       * @return Whether the obcState field is set.
       */
      @java.lang.Override
      public boolean hasObcState() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * mcb frame
       * </pre>
       *
       * <code>required uint32 obc_state = 1;</code>
       * @return The obcState.
       */
      @java.lang.Override
      public int getObcState() {
        return obcState_;
      }
      /**
       * <pre>
       * mcb frame
       * </pre>
       *
       * <code>required uint32 obc_state = 1;</code>
       * @param value The obcState to set.
       * @return This builder for chaining.
       */
      public Builder setObcState(int value) {

        obcState_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * mcb frame
       * </pre>
       *
       * <code>required uint32 obc_state = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearObcState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        obcState_ = 0;
        onChanged();
        return this;
      }

      private int uptime_ ;
      /**
       * <code>required uint32 uptime = 2;</code>
       * @return Whether the uptime field is set.
       */
      @java.lang.Override
      public boolean hasUptime() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required uint32 uptime = 2;</code>
       * @return The uptime.
       */
      @java.lang.Override
      public int getUptime() {
        return uptime_;
      }
      /**
       * <code>required uint32 uptime = 2;</code>
       * @param value The uptime to set.
       * @return This builder for chaining.
       */
      public Builder setUptime(int value) {

        uptime_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 uptime = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUptime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        uptime_ = 0;
        onChanged();
        return this;
      }

      private int flightTime_ ;
      /**
       * <code>required uint32 flight_time = 3;</code>
       * @return Whether the flightTime field is set.
       */
      @java.lang.Override
      public boolean hasFlightTime() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required uint32 flight_time = 3;</code>
       * @return The flightTime.
       */
      @java.lang.Override
      public int getFlightTime() {
        return flightTime_;
      }
      /**
       * <code>required uint32 flight_time = 3;</code>
       * @param value The flightTime to set.
       * @return This builder for chaining.
       */
      public Builder setFlightTime(int value) {

        flightTime_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 flight_time = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlightTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        flightTime_ = 0;
        onChanged();
        return this;
      }

      private float mcbBattery_ ;
      /**
       * <code>required float mcb_battery = 4;</code>
       * @return Whether the mcbBattery field is set.
       */
      @java.lang.Override
      public boolean hasMcbBattery() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required float mcb_battery = 4;</code>
       * @return The mcbBattery.
       */
      @java.lang.Override
      public float getMcbBattery() {
        return mcbBattery_;
      }
      /**
       * <code>required float mcb_battery = 4;</code>
       * @param value The mcbBattery to set.
       * @return This builder for chaining.
       */
      public Builder setMcbBattery(float value) {

        mcbBattery_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>required float mcb_battery = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMcbBattery() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mcbBattery_ = 0F;
        onChanged();
        return this;
      }

      private float gpsLat_ ;
      /**
       * <code>required float gps_lat = 5;</code>
       * @return Whether the gpsLat field is set.
       */
      @java.lang.Override
      public boolean hasGpsLat() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>required float gps_lat = 5;</code>
       * @return The gpsLat.
       */
      @java.lang.Override
      public float getGpsLat() {
        return gpsLat_;
      }
      /**
       * <code>required float gps_lat = 5;</code>
       * @param value The gpsLat to set.
       * @return This builder for chaining.
       */
      public Builder setGpsLat(float value) {

        gpsLat_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>required float gps_lat = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearGpsLat() {
        bitField0_ = (bitField0_ & ~0x00000010);
        gpsLat_ = 0F;
        onChanged();
        return this;
      }

      private float gpsLong_ ;
      /**
       * <code>required float gps_long = 6;</code>
       * @return Whether the gpsLong field is set.
       */
      @java.lang.Override
      public boolean hasGpsLong() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>required float gps_long = 6;</code>
       * @return The gpsLong.
       */
      @java.lang.Override
      public float getGpsLong() {
        return gpsLong_;
      }
      /**
       * <code>required float gps_long = 6;</code>
       * @param value The gpsLong to set.
       * @return This builder for chaining.
       */
      public Builder setGpsLong(float value) {

        gpsLong_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>required float gps_long = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearGpsLong() {
        bitField0_ = (bitField0_ & ~0x00000020);
        gpsLong_ = 0F;
        onChanged();
        return this;
      }

      private float gpsSat_ ;
      /**
       * <code>required float gps_sat = 7;</code>
       * @return Whether the gpsSat field is set.
       */
      @java.lang.Override
      public boolean hasGpsSat() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>required float gps_sat = 7;</code>
       * @return The gpsSat.
       */
      @java.lang.Override
      public float getGpsSat() {
        return gpsSat_;
      }
      /**
       * <code>required float gps_sat = 7;</code>
       * @param value The gpsSat to set.
       * @return This builder for chaining.
       */
      public Builder setGpsSat(float value) {

        gpsSat_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>required float gps_sat = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearGpsSat() {
        bitField0_ = (bitField0_ & ~0x00000040);
        gpsSat_ = 0F;
        onChanged();
        return this;
      }

      private float mcbAltitude_ ;
      /**
       * <code>required float mcb_altitude = 8;</code>
       * @return Whether the mcbAltitude field is set.
       */
      @java.lang.Override
      public boolean hasMcbAltitude() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>required float mcb_altitude = 8;</code>
       * @return The mcbAltitude.
       */
      @java.lang.Override
      public float getMcbAltitude() {
        return mcbAltitude_;
      }
      /**
       * <code>required float mcb_altitude = 8;</code>
       * @param value The mcbAltitude to set.
       * @return This builder for chaining.
       */
      public Builder setMcbAltitude(float value) {

        mcbAltitude_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>required float mcb_altitude = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMcbAltitude() {
        bitField0_ = (bitField0_ & ~0x00000080);
        mcbAltitude_ = 0F;
        onChanged();
        return this;
      }

      private float mcbVelocity_ ;
      /**
       * <code>required float mcb_velocity = 9;</code>
       * @return Whether the mcbVelocity field is set.
       */
      @java.lang.Override
      public boolean hasMcbVelocity() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>required float mcb_velocity = 9;</code>
       * @return The mcbVelocity.
       */
      @java.lang.Override
      public float getMcbVelocity() {
        return mcbVelocity_;
      }
      /**
       * <code>required float mcb_velocity = 9;</code>
       * @param value The mcbVelocity to set.
       * @return This builder for chaining.
       */
      public Builder setMcbVelocity(float value) {

        mcbVelocity_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>required float mcb_velocity = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearMcbVelocity() {
        bitField0_ = (bitField0_ & ~0x00000100);
        mcbVelocity_ = 0F;
        onChanged();
        return this;
      }

      private int mcbTemperature_ ;
      /**
       * <code>required int32 mcb_temperature = 10;</code>
       * @return Whether the mcbTemperature field is set.
       */
      @java.lang.Override
      public boolean hasMcbTemperature() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>required int32 mcb_temperature = 10;</code>
       * @return The mcbTemperature.
       */
      @java.lang.Override
      public int getMcbTemperature() {
        return mcbTemperature_;
      }
      /**
       * <code>required int32 mcb_temperature = 10;</code>
       * @param value The mcbTemperature to set.
       * @return This builder for chaining.
       */
      public Builder setMcbTemperature(int value) {

        mcbTemperature_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mcb_temperature = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearMcbTemperature() {
        bitField0_ = (bitField0_ & ~0x00000200);
        mcbTemperature_ = 0;
        onChanged();
        return this;
      }

      private float eulerFi_ ;
      /**
       * <code>required float euler_fi = 11;</code>
       * @return Whether the eulerFi field is set.
       */
      @java.lang.Override
      public boolean hasEulerFi() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>required float euler_fi = 11;</code>
       * @return The eulerFi.
       */
      @java.lang.Override
      public float getEulerFi() {
        return eulerFi_;
      }
      /**
       * <code>required float euler_fi = 11;</code>
       * @param value The eulerFi to set.
       * @return This builder for chaining.
       */
      public Builder setEulerFi(float value) {

        eulerFi_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>required float euler_fi = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearEulerFi() {
        bitField0_ = (bitField0_ & ~0x00000400);
        eulerFi_ = 0F;
        onChanged();
        return this;
      }

      private float eulerPsi_ ;
      /**
       * <code>required float euler_psi = 12;</code>
       * @return Whether the eulerPsi field is set.
       */
      @java.lang.Override
      public boolean hasEulerPsi() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>required float euler_psi = 12;</code>
       * @return The eulerPsi.
       */
      @java.lang.Override
      public float getEulerPsi() {
        return eulerPsi_;
      }
      /**
       * <code>required float euler_psi = 12;</code>
       * @param value The eulerPsi to set.
       * @return This builder for chaining.
       */
      public Builder setEulerPsi(float value) {

        eulerPsi_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>required float euler_psi = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearEulerPsi() {
        bitField0_ = (bitField0_ & ~0x00000800);
        eulerPsi_ = 0F;
        onChanged();
        return this;
      }

      private float eulerTheta_ ;
      /**
       * <code>required float euler_theta = 13;</code>
       * @return Whether the eulerTheta field is set.
       */
      @java.lang.Override
      public boolean hasEulerTheta() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>required float euler_theta = 13;</code>
       * @return The eulerTheta.
       */
      @java.lang.Override
      public float getEulerTheta() {
        return eulerTheta_;
      }
      /**
       * <code>required float euler_theta = 13;</code>
       * @param value The eulerTheta to set.
       * @return This builder for chaining.
       */
      public Builder setEulerTheta(float value) {

        eulerTheta_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>required float euler_theta = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearEulerTheta() {
        bitField0_ = (bitField0_ & ~0x00001000);
        eulerTheta_ = 0F;
        onChanged();
        return this;
      }

      private int recovPressure1_ ;
      /**
       * <pre>
       * recovery frame
       * </pre>
       *
       * <code>required uint32 recov_pressure_1 = 14;</code>
       * @return Whether the recovPressure1 field is set.
       */
      @java.lang.Override
      public boolean hasRecovPressure1() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <pre>
       * recovery frame
       * </pre>
       *
       * <code>required uint32 recov_pressure_1 = 14;</code>
       * @return The recovPressure1.
       */
      @java.lang.Override
      public int getRecovPressure1() {
        return recovPressure1_;
      }
      /**
       * <pre>
       * recovery frame
       * </pre>
       *
       * <code>required uint32 recov_pressure_1 = 14;</code>
       * @param value The recovPressure1 to set.
       * @return This builder for chaining.
       */
      public Builder setRecovPressure1(int value) {

        recovPressure1_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * recovery frame
       * </pre>
       *
       * <code>required uint32 recov_pressure_1 = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecovPressure1() {
        bitField0_ = (bitField0_ & ~0x00002000);
        recovPressure1_ = 0;
        onChanged();
        return this;
      }

      private int recovPressure2_ ;
      /**
       * <code>required uint32 recov_pressure_2 = 15;</code>
       * @return Whether the recovPressure2 field is set.
       */
      @java.lang.Override
      public boolean hasRecovPressure2() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>required uint32 recov_pressure_2 = 15;</code>
       * @return The recovPressure2.
       */
      @java.lang.Override
      public int getRecovPressure2() {
        return recovPressure2_;
      }
      /**
       * <code>required uint32 recov_pressure_2 = 15;</code>
       * @param value The recovPressure2 to set.
       * @return This builder for chaining.
       */
      public Builder setRecovPressure2(int value) {

        recovPressure2_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 recov_pressure_2 = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecovPressure2() {
        bitField0_ = (bitField0_ & ~0x00004000);
        recovPressure2_ = 0;
        onChanged();
        return this;
      }

      private int recovByteData_ ;
      /**
       * <code>required fixed32 recov_byte_data = 16;</code>
       * @return Whether the recovByteData field is set.
       */
      @java.lang.Override
      public boolean hasRecovByteData() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>required fixed32 recov_byte_data = 16;</code>
       * @return The recovByteData.
       */
      @java.lang.Override
      public int getRecovByteData() {
        return recovByteData_;
      }
      /**
       * <code>required fixed32 recov_byte_data = 16;</code>
       * @param value The recovByteData to set.
       * @return This builder for chaining.
       */
      public Builder setRecovByteData(int value) {

        recovByteData_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 recov_byte_data = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecovByteData() {
        bitField0_ = (bitField0_ & ~0x00008000);
        recovByteData_ = 0;
        onChanged();
        return this;
      }

      private float pitotBattery_ ;
      /**
       * <pre>
       * pitot frame
       * </pre>
       *
       * <code>required float pitot_battery = 17;</code>
       * @return Whether the pitotBattery field is set.
       */
      @java.lang.Override
      public boolean hasPitotBattery() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <pre>
       * pitot frame
       * </pre>
       *
       * <code>required float pitot_battery = 17;</code>
       * @return The pitotBattery.
       */
      @java.lang.Override
      public float getPitotBattery() {
        return pitotBattery_;
      }
      /**
       * <pre>
       * pitot frame
       * </pre>
       *
       * <code>required float pitot_battery = 17;</code>
       * @param value The pitotBattery to set.
       * @return This builder for chaining.
       */
      public Builder setPitotBattery(float value) {

        pitotBattery_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * pitot frame
       * </pre>
       *
       * <code>required float pitot_battery = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearPitotBattery() {
        bitField0_ = (bitField0_ & ~0x00010000);
        pitotBattery_ = 0F;
        onChanged();
        return this;
      }

      private int pitotAltitude_ ;
      /**
       * <code>required int32 pitot_altitude = 18;</code>
       * @return Whether the pitotAltitude field is set.
       */
      @java.lang.Override
      public boolean hasPitotAltitude() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>required int32 pitot_altitude = 18;</code>
       * @return The pitotAltitude.
       */
      @java.lang.Override
      public int getPitotAltitude() {
        return pitotAltitude_;
      }
      /**
       * <code>required int32 pitot_altitude = 18;</code>
       * @param value The pitotAltitude to set.
       * @return This builder for chaining.
       */
      public Builder setPitotAltitude(int value) {

        pitotAltitude_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pitot_altitude = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearPitotAltitude() {
        bitField0_ = (bitField0_ & ~0x00020000);
        pitotAltitude_ = 0;
        onChanged();
        return this;
      }

      private int pitotVelocity_ ;
      /**
       * <code>required int32 pitot_velocity = 19;</code>
       * @return Whether the pitotVelocity field is set.
       */
      @java.lang.Override
      public boolean hasPitotVelocity() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <code>required int32 pitot_velocity = 19;</code>
       * @return The pitotVelocity.
       */
      @java.lang.Override
      public int getPitotVelocity() {
        return pitotVelocity_;
      }
      /**
       * <code>required int32 pitot_velocity = 19;</code>
       * @param value The pitotVelocity to set.
       * @return This builder for chaining.
       */
      public Builder setPitotVelocity(int value) {

        pitotVelocity_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pitot_velocity = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearPitotVelocity() {
        bitField0_ = (bitField0_ & ~0x00040000);
        pitotVelocity_ = 0;
        onChanged();
        return this;
      }

      private int pitotTemperature_ ;
      /**
       * <code>required int32 pitot_temperature = 20;</code>
       * @return Whether the pitotTemperature field is set.
       */
      @java.lang.Override
      public boolean hasPitotTemperature() {
        return ((bitField0_ & 0x00080000) != 0);
      }
      /**
       * <code>required int32 pitot_temperature = 20;</code>
       * @return The pitotTemperature.
       */
      @java.lang.Override
      public int getPitotTemperature() {
        return pitotTemperature_;
      }
      /**
       * <code>required int32 pitot_temperature = 20;</code>
       * @param value The pitotTemperature to set.
       * @return This builder for chaining.
       */
      public Builder setPitotTemperature(int value) {

        pitotTemperature_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pitot_temperature = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearPitotTemperature() {
        bitField0_ = (bitField0_ & ~0x00080000);
        pitotTemperature_ = 0;
        onChanged();
        return this;
      }

      private float mvalBattery_ ;
      /**
       * <pre>
       * main valve
       * </pre>
       *
       * <code>required float mval_battery = 21;</code>
       * @return Whether the mvalBattery field is set.
       */
      @java.lang.Override
      public boolean hasMvalBattery() {
        return ((bitField0_ & 0x00100000) != 0);
      }
      /**
       * <pre>
       * main valve
       * </pre>
       *
       * <code>required float mval_battery = 21;</code>
       * @return The mvalBattery.
       */
      @java.lang.Override
      public float getMvalBattery() {
        return mvalBattery_;
      }
      /**
       * <pre>
       * main valve
       * </pre>
       *
       * <code>required float mval_battery = 21;</code>
       * @param value The mvalBattery to set.
       * @return This builder for chaining.
       */
      public Builder setMvalBattery(float value) {

        mvalBattery_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * main valve
       * </pre>
       *
       * <code>required float mval_battery = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearMvalBattery() {
        bitField0_ = (bitField0_ & ~0x00100000);
        mvalBattery_ = 0F;
        onChanged();
        return this;
      }

      private int mvalByteData_ ;
      /**
       * <code>required fixed32 mval_byte_data = 22;</code>
       * @return Whether the mvalByteData field is set.
       */
      @java.lang.Override
      public boolean hasMvalByteData() {
        return ((bitField0_ & 0x00200000) != 0);
      }
      /**
       * <code>required fixed32 mval_byte_data = 22;</code>
       * @return The mvalByteData.
       */
      @java.lang.Override
      public int getMvalByteData() {
        return mvalByteData_;
      }
      /**
       * <code>required fixed32 mval_byte_data = 22;</code>
       * @param value The mvalByteData to set.
       * @return This builder for chaining.
       */
      public Builder setMvalByteData(int value) {

        mvalByteData_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 mval_byte_data = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearMvalByteData() {
        bitField0_ = (bitField0_ & ~0x00200000);
        mvalByteData_ = 0;
        onChanged();
        return this;
      }

      private float ventBattery_ ;
      /**
       * <pre>
       * vent valve
       * </pre>
       *
       * <code>required float vent_battery = 23;</code>
       * @return Whether the ventBattery field is set.
       */
      @java.lang.Override
      public boolean hasVentBattery() {
        return ((bitField0_ & 0x00400000) != 0);
      }
      /**
       * <pre>
       * vent valve
       * </pre>
       *
       * <code>required float vent_battery = 23;</code>
       * @return The ventBattery.
       */
      @java.lang.Override
      public float getVentBattery() {
        return ventBattery_;
      }
      /**
       * <pre>
       * vent valve
       * </pre>
       *
       * <code>required float vent_battery = 23;</code>
       * @param value The ventBattery to set.
       * @return This builder for chaining.
       */
      public Builder setVentBattery(float value) {

        ventBattery_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * vent valve
       * </pre>
       *
       * <code>required float vent_battery = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearVentBattery() {
        bitField0_ = (bitField0_ & ~0x00400000);
        ventBattery_ = 0F;
        onChanged();
        return this;
      }

      private float tankPressure_ ;
      /**
       * <code>required float tank_pressure = 24;</code>
       * @return Whether the tankPressure field is set.
       */
      @java.lang.Override
      public boolean hasTankPressure() {
        return ((bitField0_ & 0x00800000) != 0);
      }
      /**
       * <code>required float tank_pressure = 24;</code>
       * @return The tankPressure.
       */
      @java.lang.Override
      public float getTankPressure() {
        return tankPressure_;
      }
      /**
       * <code>required float tank_pressure = 24;</code>
       * @param value The tankPressure to set.
       * @return This builder for chaining.
       */
      public Builder setTankPressure(float value) {

        tankPressure_ = value;
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <code>required float tank_pressure = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearTankPressure() {
        bitField0_ = (bitField0_ & ~0x00800000);
        tankPressure_ = 0F;
        onChanged();
        return this;
      }

      private int ventByteData_ ;
      /**
       * <code>required fixed32 vent_byte_data = 25;</code>
       * @return Whether the ventByteData field is set.
       */
      @java.lang.Override
      public boolean hasVentByteData() {
        return ((bitField0_ & 0x01000000) != 0);
      }
      /**
       * <code>required fixed32 vent_byte_data = 25;</code>
       * @return The ventByteData.
       */
      @java.lang.Override
      public int getVentByteData() {
        return ventByteData_;
      }
      /**
       * <code>required fixed32 vent_byte_data = 25;</code>
       * @param value The ventByteData to set.
       * @return This builder for chaining.
       */
      public Builder setVentByteData(int value) {

        ventByteData_ = value;
        bitField0_ |= 0x01000000;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 vent_byte_data = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearVentByteData() {
        bitField0_ = (bitField0_ & ~0x01000000);
        ventByteData_ = 0;
        onChanged();
        return this;
      }

      private float tanwaBattery_ ;
      /**
       * <pre>
       * tanwa frame
       * </pre>
       *
       * <code>required float tanwa_battery = 26;</code>
       * @return Whether the tanwaBattery field is set.
       */
      @java.lang.Override
      public boolean hasTanwaBattery() {
        return ((bitField0_ & 0x02000000) != 0);
      }
      /**
       * <pre>
       * tanwa frame
       * </pre>
       *
       * <code>required float tanwa_battery = 26;</code>
       * @return The tanwaBattery.
       */
      @java.lang.Override
      public float getTanwaBattery() {
        return tanwaBattery_;
      }
      /**
       * <pre>
       * tanwa frame
       * </pre>
       *
       * <code>required float tanwa_battery = 26;</code>
       * @param value The tanwaBattery to set.
       * @return This builder for chaining.
       */
      public Builder setTanwaBattery(float value) {

        tanwaBattery_ = value;
        bitField0_ |= 0x02000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tanwa frame
       * </pre>
       *
       * <code>required float tanwa_battery = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearTanwaBattery() {
        bitField0_ = (bitField0_ & ~0x02000000);
        tanwaBattery_ = 0F;
        onChanged();
        return this;
      }

      private int tanwaByteData_ ;
      /**
       * <code>required fixed32 tanwa_byte_data = 27;</code>
       * @return Whether the tanwaByteData field is set.
       */
      @java.lang.Override
      public boolean hasTanwaByteData() {
        return ((bitField0_ & 0x04000000) != 0);
      }
      /**
       * <code>required fixed32 tanwa_byte_data = 27;</code>
       * @return The tanwaByteData.
       */
      @java.lang.Override
      public int getTanwaByteData() {
        return tanwaByteData_;
      }
      /**
       * <code>required fixed32 tanwa_byte_data = 27;</code>
       * @param value The tanwaByteData to set.
       * @return This builder for chaining.
       */
      public Builder setTanwaByteData(int value) {

        tanwaByteData_ = value;
        bitField0_ |= 0x04000000;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 tanwa_byte_data = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearTanwaByteData() {
        bitField0_ = (bitField0_ & ~0x04000000);
        tanwaByteData_ = 0;
        onChanged();
        return this;
      }

      private int tanwaState_ ;
      /**
       * <code>required uint32 tanwa_state = 28;</code>
       * @return Whether the tanwaState field is set.
       */
      @java.lang.Override
      public boolean hasTanwaState() {
        return ((bitField0_ & 0x08000000) != 0);
      }
      /**
       * <code>required uint32 tanwa_state = 28;</code>
       * @return The tanwaState.
       */
      @java.lang.Override
      public int getTanwaState() {
        return tanwaState_;
      }
      /**
       * <code>required uint32 tanwa_state = 28;</code>
       * @param value The tanwaState to set.
       * @return This builder for chaining.
       */
      public Builder setTanwaState(int value) {

        tanwaState_ = value;
        bitField0_ |= 0x08000000;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 tanwa_state = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearTanwaState() {
        bitField0_ = (bitField0_ & ~0x08000000);
        tanwaState_ = 0;
        onChanged();
        return this;
      }

      private float rocketWeight_ ;
      /**
       * <code>required float rocket_weight = 29;</code>
       * @return Whether the rocketWeight field is set.
       */
      @java.lang.Override
      public boolean hasRocketWeight() {
        return ((bitField0_ & 0x10000000) != 0);
      }
      /**
       * <code>required float rocket_weight = 29;</code>
       * @return The rocketWeight.
       */
      @java.lang.Override
      public float getRocketWeight() {
        return rocketWeight_;
      }
      /**
       * <code>required float rocket_weight = 29;</code>
       * @param value The rocketWeight to set.
       * @return This builder for chaining.
       */
      public Builder setRocketWeight(float value) {

        rocketWeight_ = value;
        bitField0_ |= 0x10000000;
        onChanged();
        return this;
      }
      /**
       * <code>required float rocket_weight = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearRocketWeight() {
        bitField0_ = (bitField0_ & ~0x10000000);
        rocketWeight_ = 0F;
        onChanged();
        return this;
      }

      private float tankWeight_ ;
      /**
       * <code>required float tank_weight = 30;</code>
       * @return Whether the tankWeight field is set.
       */
      @java.lang.Override
      public boolean hasTankWeight() {
        return ((bitField0_ & 0x20000000) != 0);
      }
      /**
       * <code>required float tank_weight = 30;</code>
       * @return The tankWeight.
       */
      @java.lang.Override
      public float getTankWeight() {
        return tankWeight_;
      }
      /**
       * <code>required float tank_weight = 30;</code>
       * @param value The tankWeight to set.
       * @return This builder for chaining.
       */
      public Builder setTankWeight(float value) {

        tankWeight_ = value;
        bitField0_ |= 0x20000000;
        onChanged();
        return this;
      }
      /**
       * <code>required float tank_weight = 30;</code>
       * @return This builder for chaining.
       */
      public Builder clearTankWeight() {
        bitField0_ = (bitField0_ & ~0x20000000);
        tankWeight_ = 0F;
        onChanged();
        return this;
      }

      private float temperature1_ ;
      /**
       * <code>required float temperature1 = 31;</code>
       * @return Whether the temperature1 field is set.
       */
      @java.lang.Override
      public boolean hasTemperature1() {
        return ((bitField0_ & 0x40000000) != 0);
      }
      /**
       * <code>required float temperature1 = 31;</code>
       * @return The temperature1.
       */
      @java.lang.Override
      public float getTemperature1() {
        return temperature1_;
      }
      /**
       * <code>required float temperature1 = 31;</code>
       * @param value The temperature1 to set.
       * @return This builder for chaining.
       */
      public Builder setTemperature1(float value) {

        temperature1_ = value;
        bitField0_ |= 0x40000000;
        onChanged();
        return this;
      }
      /**
       * <code>required float temperature1 = 31;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemperature1() {
        bitField0_ = (bitField0_ & ~0x40000000);
        temperature1_ = 0F;
        onChanged();
        return this;
      }

      private float temperature2_ ;
      /**
       * <code>required float temperature2 = 32;</code>
       * @return Whether the temperature2 field is set.
       */
      @java.lang.Override
      public boolean hasTemperature2() {
        return ((bitField0_ & 0x80000000) != 0);
      }
      /**
       * <code>required float temperature2 = 32;</code>
       * @return The temperature2.
       */
      @java.lang.Override
      public float getTemperature2() {
        return temperature2_;
      }
      /**
       * <code>required float temperature2 = 32;</code>
       * @param value The temperature2 to set.
       * @return This builder for chaining.
       */
      public Builder setTemperature2(float value) {

        temperature2_ = value;
        bitField0_ |= 0x80000000;
        onChanged();
        return this;
      }
      /**
       * <code>required float temperature2 = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemperature2() {
        bitField0_ = (bitField0_ & ~0x80000000);
        temperature2_ = 0F;
        onChanged();
        return this;
      }

      private float pressure_ ;
      /**
       * <code>required float pressure = 33;</code>
       * @return Whether the pressure field is set.
       */
      @java.lang.Override
      public boolean hasPressure() {
        return ((bitField1_ & 0x00000001) != 0);
      }
      /**
       * <code>required float pressure = 33;</code>
       * @return The pressure.
       */
      @java.lang.Override
      public float getPressure() {
        return pressure_;
      }
      /**
       * <code>required float pressure = 33;</code>
       * @param value The pressure to set.
       * @return This builder for chaining.
       */
      public Builder setPressure(float value) {

        pressure_ = value;
        bitField1_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>required float pressure = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearPressure() {
        bitField1_ = (bitField1_ & ~0x00000001);
        pressure_ = 0F;
        onChanged();
        return this;
      }

      private int espNowByteData_ ;
      /**
       * <code>required fixed32 esp_now_byte_data = 34;</code>
       * @return Whether the espNowByteData field is set.
       */
      @java.lang.Override
      public boolean hasEspNowByteData() {
        return ((bitField1_ & 0x00000002) != 0);
      }
      /**
       * <code>required fixed32 esp_now_byte_data = 34;</code>
       * @return The espNowByteData.
       */
      @java.lang.Override
      public int getEspNowByteData() {
        return espNowByteData_;
      }
      /**
       * <code>required fixed32 esp_now_byte_data = 34;</code>
       * @param value The espNowByteData to set.
       * @return This builder for chaining.
       */
      public Builder setEspNowByteData(int value) {

        espNowByteData_ = value;
        bitField1_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 esp_now_byte_data = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearEspNowByteData() {
        bitField1_ = (bitField1_ & ~0x00000002);
        espNowByteData_ = 0;
        onChanged();
        return this;
      }

      private int errors_ ;
      /**
       * <code>required fixed32 errors = 35;</code>
       * @return Whether the errors field is set.
       */
      @java.lang.Override
      public boolean hasErrors() {
        return ((bitField1_ & 0x00000004) != 0);
      }
      /**
       * <code>required fixed32 errors = 35;</code>
       * @return The errors.
       */
      @java.lang.Override
      public int getErrors() {
        return errors_;
      }
      /**
       * <code>required fixed32 errors = 35;</code>
       * @param value The errors to set.
       * @return This builder for chaining.
       */
      public Builder setErrors(int value) {

        errors_ = value;
        bitField1_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 errors = 35;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrors() {
        bitField1_ = (bitField1_ & ~0x00000004);
        errors_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:LoRaFrame)
    }

    // @@protoc_insertion_point(class_scope:LoRaFrame)
    private static final pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame();
    }

    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LoRaFrame>
        PARSER = new com.google.protobuf.AbstractParser<LoRaFrame>() {
      @java.lang.Override
      public LoRaFrame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LoRaFrame> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LoRaFrame> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaFrame getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LoRaCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LoRaCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 lora_dev_id = 1;</code>
     * @return Whether the loraDevId field is set.
     */
    boolean hasLoraDevId();
    /**
     * <code>required uint32 lora_dev_id = 1;</code>
     * @return The loraDevId.
     */
    int getLoraDevId();

    /**
     * <code>required uint32 sys_dev_id = 2;</code>
     * @return Whether the sysDevId field is set.
     */
    boolean hasSysDevId();
    /**
     * <code>required uint32 sys_dev_id = 2;</code>
     * @return The sysDevId.
     */
    int getSysDevId();

    /**
     * <code>required uint32 command = 3;</code>
     * @return Whether the command field is set.
     */
    boolean hasCommand();
    /**
     * <code>required uint32 command = 3;</code>
     * @return The command.
     */
    int getCommand();

    /**
     * <code>required int32 payload = 4;</code>
     * @return Whether the payload field is set.
     */
    boolean hasPayload();
    /**
     * <code>required int32 payload = 4;</code>
     * @return The payload.
     */
    int getPayload();
  }
  /**
   * Protobuf type {@code LoRaCommand}
   */
  public static final class LoRaCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:LoRaCommand)
      LoRaCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LoRaCommand.newBuilder() to construct.
    private LoRaCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LoRaCommand() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LoRaCommand();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.internal_static_LoRaCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.internal_static_LoRaCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand.class, pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand.Builder.class);
    }

    private int bitField0_;
    public static final int LORA_DEV_ID_FIELD_NUMBER = 1;
    private int loraDevId_ = 0;
    /**
     * <code>required uint32 lora_dev_id = 1;</code>
     * @return Whether the loraDevId field is set.
     */
    @java.lang.Override
    public boolean hasLoraDevId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required uint32 lora_dev_id = 1;</code>
     * @return The loraDevId.
     */
    @java.lang.Override
    public int getLoraDevId() {
      return loraDevId_;
    }

    public static final int SYS_DEV_ID_FIELD_NUMBER = 2;
    private int sysDevId_ = 0;
    /**
     * <code>required uint32 sys_dev_id = 2;</code>
     * @return Whether the sysDevId field is set.
     */
    @java.lang.Override
    public boolean hasSysDevId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required uint32 sys_dev_id = 2;</code>
     * @return The sysDevId.
     */
    @java.lang.Override
    public int getSysDevId() {
      return sysDevId_;
    }

    public static final int COMMAND_FIELD_NUMBER = 3;
    private int command_ = 0;
    /**
     * <code>required uint32 command = 3;</code>
     * @return Whether the command field is set.
     */
    @java.lang.Override
    public boolean hasCommand() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required uint32 command = 3;</code>
     * @return The command.
     */
    @java.lang.Override
    public int getCommand() {
      return command_;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 4;
    private int payload_ = 0;
    /**
     * <code>required int32 payload = 4;</code>
     * @return Whether the payload field is set.
     */
    @java.lang.Override
    public boolean hasPayload() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required int32 payload = 4;</code>
     * @return The payload.
     */
    @java.lang.Override
    public int getPayload() {
      return payload_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLoraDevId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSysDevId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCommand()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPayload()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, loraDevId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, sysDevId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, command_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, payload_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, loraDevId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, sysDevId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, command_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, payload_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand)) {
        return super.equals(obj);
      }
      pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand other = (pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand) obj;

      if (hasLoraDevId() != other.hasLoraDevId()) return false;
      if (hasLoraDevId()) {
        if (getLoraDevId()
            != other.getLoraDevId()) return false;
      }
      if (hasSysDevId() != other.hasSysDevId()) return false;
      if (hasSysDevId()) {
        if (getSysDevId()
            != other.getSysDevId()) return false;
      }
      if (hasCommand() != other.hasCommand()) return false;
      if (hasCommand()) {
        if (getCommand()
            != other.getCommand()) return false;
      }
      if (hasPayload() != other.hasPayload()) return false;
      if (hasPayload()) {
        if (getPayload()
            != other.getPayload()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLoraDevId()) {
        hash = (37 * hash) + LORA_DEV_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLoraDevId();
      }
      if (hasSysDevId()) {
        hash = (37 * hash) + SYS_DEV_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSysDevId();
      }
      if (hasCommand()) {
        hash = (37 * hash) + COMMAND_FIELD_NUMBER;
        hash = (53 * hash) + getCommand();
      }
      if (hasPayload()) {
        hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPayload();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LoRaCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LoRaCommand)
        pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.internal_static_LoRaCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.internal_static_LoRaCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand.class, pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand.Builder.class);
      }

      // Construct using pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        loraDevId_ = 0;
        sysDevId_ = 0;
        command_ = 0;
        payload_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.internal_static_LoRaCommand_descriptor;
      }

      @java.lang.Override
      public pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand getDefaultInstanceForType() {
        return pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand.getDefaultInstance();
      }

      @java.lang.Override
      public pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand build() {
        pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand buildPartial() {
        pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand result = new pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.loraDevId_ = loraDevId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.sysDevId_ = sysDevId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.command_ = command_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.payload_ = payload_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand) {
          return mergeFrom((pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand other) {
        if (other == pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand.getDefaultInstance()) return this;
        if (other.hasLoraDevId()) {
          setLoraDevId(other.getLoraDevId());
        }
        if (other.hasSysDevId()) {
          setSysDevId(other.getSysDevId());
        }
        if (other.hasCommand()) {
          setCommand(other.getCommand());
        }
        if (other.hasPayload()) {
          setPayload(other.getPayload());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasLoraDevId()) {
          return false;
        }
        if (!hasSysDevId()) {
          return false;
        }
        if (!hasCommand()) {
          return false;
        }
        if (!hasPayload()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                loraDevId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                sysDevId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                command_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                payload_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int loraDevId_ ;
      /**
       * <code>required uint32 lora_dev_id = 1;</code>
       * @return Whether the loraDevId field is set.
       */
      @java.lang.Override
      public boolean hasLoraDevId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required uint32 lora_dev_id = 1;</code>
       * @return The loraDevId.
       */
      @java.lang.Override
      public int getLoraDevId() {
        return loraDevId_;
      }
      /**
       * <code>required uint32 lora_dev_id = 1;</code>
       * @param value The loraDevId to set.
       * @return This builder for chaining.
       */
      public Builder setLoraDevId(int value) {

        loraDevId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 lora_dev_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLoraDevId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        loraDevId_ = 0;
        onChanged();
        return this;
      }

      private int sysDevId_ ;
      /**
       * <code>required uint32 sys_dev_id = 2;</code>
       * @return Whether the sysDevId field is set.
       */
      @java.lang.Override
      public boolean hasSysDevId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required uint32 sys_dev_id = 2;</code>
       * @return The sysDevId.
       */
      @java.lang.Override
      public int getSysDevId() {
        return sysDevId_;
      }
      /**
       * <code>required uint32 sys_dev_id = 2;</code>
       * @param value The sysDevId to set.
       * @return This builder for chaining.
       */
      public Builder setSysDevId(int value) {

        sysDevId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 sys_dev_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSysDevId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sysDevId_ = 0;
        onChanged();
        return this;
      }

      private int command_ ;
      /**
       * <code>required uint32 command = 3;</code>
       * @return Whether the command field is set.
       */
      @java.lang.Override
      public boolean hasCommand() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required uint32 command = 3;</code>
       * @return The command.
       */
      @java.lang.Override
      public int getCommand() {
        return command_;
      }
      /**
       * <code>required uint32 command = 3;</code>
       * @param value The command to set.
       * @return This builder for chaining.
       */
      public Builder setCommand(int value) {

        command_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 command = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCommand() {
        bitField0_ = (bitField0_ & ~0x00000004);
        command_ = 0;
        onChanged();
        return this;
      }

      private int payload_ ;
      /**
       * <code>required int32 payload = 4;</code>
       * @return Whether the payload field is set.
       */
      @java.lang.Override
      public boolean hasPayload() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required int32 payload = 4;</code>
       * @return The payload.
       */
      @java.lang.Override
      public int getPayload() {
        return payload_;
      }
      /**
       * <code>required int32 payload = 4;</code>
       * @param value The payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayload(int value) {

        payload_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 payload = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayload() {
        bitField0_ = (bitField0_ & ~0x00000008);
        payload_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:LoRaCommand)
    }

    // @@protoc_insertion_point(class_scope:LoRaCommand)
    private static final pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand();
    }

    public static pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LoRaCommand>
        PARSER = new com.google.protobuf.AbstractParser<LoRaCommand>() {
      @java.lang.Override
      public LoRaCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LoRaCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LoRaCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public pl.edu.pwr.pwrinspace.poliwrocket.Model.MessageParser.FrameProtos.LoRaCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LoRaFrame_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LoRaFrame_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LoRaCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LoRaCommand_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037src/main/resources/frames.proto\"\207\006\n\tLo" +
      "RaFrame\022\021\n\tobc_state\030\001 \002(\r\022\016\n\006uptime\030\002 \002" +
      "(\r\022\023\n\013flight_time\030\003 \002(\r\022\023\n\013mcb_battery\030\004" +
      " \002(\002\022\017\n\007gps_lat\030\005 \002(\002\022\020\n\010gps_long\030\006 \002(\002\022" +
      "\017\n\007gps_sat\030\007 \002(\002\022\024\n\014mcb_altitude\030\010 \002(\002\022\024" +
      "\n\014mcb_velocity\030\t \002(\002\022\027\n\017mcb_temperature\030" +
      "\n \002(\005\022\020\n\010euler_fi\030\013 \002(\002\022\021\n\teuler_psi\030\014 \002" +
      "(\002\022\023\n\013euler_theta\030\r \002(\002\022\030\n\020recov_pressur" +
      "e_1\030\016 \002(\r\022\030\n\020recov_pressure_2\030\017 \002(\r\022\027\n\017r" +
      "ecov_byte_data\030\020 \002(\007\022\025\n\rpitot_battery\030\021 " +
      "\002(\002\022\026\n\016pitot_altitude\030\022 \002(\005\022\026\n\016pitot_vel" +
      "ocity\030\023 \002(\005\022\031\n\021pitot_temperature\030\024 \002(\005\022\024" +
      "\n\014mval_battery\030\025 \002(\002\022\026\n\016mval_byte_data\030\026" +
      " \002(\007\022\024\n\014vent_battery\030\027 \002(\002\022\025\n\rtank_press" +
      "ure\030\030 \002(\002\022\026\n\016vent_byte_data\030\031 \002(\007\022\025\n\rtan" +
      "wa_battery\030\032 \002(\002\022\027\n\017tanwa_byte_data\030\033 \002(" +
      "\007\022\023\n\013tanwa_state\030\034 \002(\r\022\025\n\rrocket_weight\030" +
      "\035 \002(\002\022\023\n\013tank_weight\030\036 \002(\002\022\024\n\014temperatur" +
      "e1\030\037 \002(\002\022\024\n\014temperature2\030  \002(\002\022\020\n\010pressu" +
      "re\030! \002(\002\022\031\n\021esp_now_byte_data\030\" \002(\007\022\016\n\006e" +
      "rrors\030# \002(\007\"X\n\013LoRaCommand\022\023\n\013lora_dev_i" +
      "d\030\001 \002(\r\022\022\n\nsys_dev_id\030\002 \002(\r\022\017\n\007command\030\003" +
      " \002(\r\022\017\n\007payload\030\004 \002(\005BD\n5pl.edu.pwr.pwri" +
      "nspace.poliwrocket.Model.MessageParserB\013" +
      "FrameProtos"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_LoRaFrame_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_LoRaFrame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LoRaFrame_descriptor,
        new java.lang.String[] { "ObcState", "Uptime", "FlightTime", "McbBattery", "GpsLat", "GpsLong", "GpsSat", "McbAltitude", "McbVelocity", "McbTemperature", "EulerFi", "EulerPsi", "EulerTheta", "RecovPressure1", "RecovPressure2", "RecovByteData", "PitotBattery", "PitotAltitude", "PitotVelocity", "PitotTemperature", "MvalBattery", "MvalByteData", "VentBattery", "TankPressure", "VentByteData", "TanwaBattery", "TanwaByteData", "TanwaState", "RocketWeight", "TankWeight", "Temperature1", "Temperature2", "Pressure", "EspNowByteData", "Errors", });
    internal_static_LoRaCommand_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_LoRaCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LoRaCommand_descriptor,
        new java.lang.String[] { "LoraDevId", "SysDevId", "Command", "Payload", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
